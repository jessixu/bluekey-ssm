<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ibm.bluekey.dao.SendRecordMapper">
  <resultMap id="BaseResultMap" type="com.ibm.bluekey.bean.SendRecord">
    <id column="record_id" jdbcType="INTEGER" property="recordId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="receive_email" jdbcType="VARCHAR" property="receiveEmail" />
    <result column="email_subject" jdbcType="VARCHAR" property="emailSubject" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="deleted" jdbcType="INTEGER" property="deleted" />
    <result column="access_id" jdbcType="INTEGER" property="accessId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    record_id, user_id, email, receive_email, email_subject, content, create_time, deleted, 
    access_id
  </sql>
  <select id="selectByExample" parameterType="com.ibm.bluekey.bean.SendRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from send_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from send_record
    where record_id = #{recordId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from send_record
    where record_id = #{recordId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ibm.bluekey.bean.SendRecordExample">
    delete from send_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ibm.bluekey.bean.SendRecord">
    insert into send_record (record_id, user_id, email, 
      receive_email, email_subject, content, 
      create_time, deleted, access_id
      )
    values (#{recordId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, 
      #{receiveEmail,jdbcType=VARCHAR}, #{emailSubject,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{deleted,jdbcType=INTEGER}, #{accessId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ibm.bluekey.bean.SendRecord">
    insert into send_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="recordId != null">
        record_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="receiveEmail != null">
        receive_email,
      </if>
      <if test="emailSubject != null">
        email_subject,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
      <if test="accessId != null">
        access_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="recordId != null">
        #{recordId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="receiveEmail != null">
        #{receiveEmail,jdbcType=VARCHAR},
      </if>
      <if test="emailSubject != null">
        #{emailSubject,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=INTEGER},
      </if>
      <if test="accessId != null">
        #{accessId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ibm.bluekey.bean.SendRecordExample" resultType="java.lang.Long">
    select count(*) from send_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update send_record
    <set>
      <if test="record.recordId != null">
        record_id = #{record.recordId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.receiveEmail != null">
        receive_email = #{record.receiveEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.emailSubject != null">
        email_subject = #{record.emailSubject,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleted != null">
        deleted = #{record.deleted,jdbcType=INTEGER},
      </if>
      <if test="record.accessId != null">
        access_id = #{record.accessId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update send_record
    set record_id = #{record.recordId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      email = #{record.email,jdbcType=VARCHAR},
      receive_email = #{record.receiveEmail,jdbcType=VARCHAR},
      email_subject = #{record.emailSubject,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      deleted = #{record.deleted,jdbcType=INTEGER},
      access_id = #{record.accessId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ibm.bluekey.bean.SendRecord">
    update send_record
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="receiveEmail != null">
        receive_email = #{receiveEmail,jdbcType=VARCHAR},
      </if>
      <if test="emailSubject != null">
        email_subject = #{emailSubject,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=INTEGER},
      </if>
      <if test="accessId != null">
        access_id = #{accessId,jdbcType=INTEGER},
      </if>
    </set>
    where record_id = #{recordId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ibm.bluekey.bean.SendRecord">
    update send_record
    set user_id = #{userId,jdbcType=INTEGER},
      email = #{email,jdbcType=VARCHAR},
      receive_email = #{receiveEmail,jdbcType=VARCHAR},
      email_subject = #{emailSubject,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      deleted = #{deleted,jdbcType=INTEGER},
      access_id = #{accessId,jdbcType=INTEGER}
    where record_id = #{recordId,jdbcType=INTEGER}
  </update>
</mapper>